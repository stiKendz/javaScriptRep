$prettyBorder: 2px solid;
$slowTransition: 1s;
$normalTransition: 0.4s;
$bigScale: scale(1.5);
$smallScale: scale(1.05);
$negativeSmallScale: scale(0.8);
$prettyShadow: 0px 5px 10px 0px black;

@mixin baseColumnFlex {
    display: flex;
    flex-direction: column;
    justify-content: start;
    align-items: center;
}
@mixin baseFlex {
    display: flex;
    align-items: center;
    justify-content: center;
}
@mixin baseSmallButton {
    @include baseFlex;
    margin: 0;
    padding: 2px 20px;
    border: $prettyBorder black;

    font-size: 14px;
    font-weight: 100;
}

@font-face {
    font-family: "Oswald";
    src: url(../fonts/static/Oswald-Regular.ttf);
}

html,
body {
    font-family: Oswald;
}


header {
    // всё в файле style.css
    z-index: 2;
    h1 {
        font-size: 40px;
        letter-spacing: 2px;

        color: white;

        -webkit-text-stroke: 1px black;

        &::before {

        }
        &::after {

        }
    }
}

.square-calc-conrainer {
    // всё в файле style.css
    z-index: 1;

    width: 200px;

    box-shadow: $prettyShadow;
}

.inputs-container {
    @include baseColumnFlex;
    margin: 0;
    border: 0;
    padding-top: 20px;
    gap: 20px 0px;
}

.input-side {
    // часть в файле style.css
    @include baseFlex;

    width: 180px;

    border: 0;
    border-bottom: $prettyBorder;

    font-family: Oswald;

    outline: none;
}

.calculate-button {
    @include baseSmallButton;

    position: relative;

    font-family: Oswald;

    outline: none;
    user-select: none;
    cursor: pointer;

    &::before {
        content: '';

        position: absolute;
        bottom: 0;
        left: 50%;
        width: 0%;
        height: 1.25px;

        background-color: blue;

        transition: width 0.4s ease-out;
        transform: translateX(-50%);
    }

    &:hover::before {
        width: 100%;
    }
    &:active {
        border: $prettyBorder grey;

        transform: $negativeSmallScale;
    }
}

.output {
    border-bottom: $prettyBorder;

    &:hover {
        transform: $smallScale;
        transition: $slowTransition;
        cursor: pointer;
    }
}